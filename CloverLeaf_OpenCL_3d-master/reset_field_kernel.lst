


PGF90 (Version     13.5)          07/18/2014  14:45:36      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir /usr/mpi/pgi/mvapich2-1.7-qlc/include
          -idir /usr/mpi/pgi/mvapich2-1.7-qlc/include
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: reset_field_kernel.f90

(    1) !Crown Copyright 2012 AWE.
(    2) !
(    3) ! This file is part of CloverLeaf.
(    4) !
(    5) ! CloverLeaf is free software: you can redistribute it and/or modify it under 
(    6) ! the terms of the GNU General Public License as published by the 
(    7) ! Free Software Foundation, either version 3 of the License, or (at your option) 
(    8) ! any later version.
(    9) !
(   10) ! CloverLeaf is distributed in the hope that it will be useful, but 
(   11) ! WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
(   12) ! FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
(   13) ! details.
(   14) !
(   15) ! You should have received a copy of the GNU General Public License along with 
(   16) ! CloverLeaf. If not, see http://www.gnu.org/licenses/.
(   17) 
(   18) !>  @brief Fortran reset field kernel.
(   19) !>  @author Wayne Gaudin
(   20) !>  @details Copies all of the final end of step filed data to the begining of
(   21) !>  step data, ready for the next timestep.
(   22) 
(   23) MODULE reset_field_kernel_module
(   24) 
(   25) CONTAINS
(   26) 
(   27) SUBROUTINE reset_field_kernel(x_min,x_max,y_min,y_max,z_min,z_max,    &
(   28)                               density0,           &
(   29)                               density1,           &
(   30)                               energy0,            &
(   31)                               energy1,            &
(   32)                               xvel0,              &
(   33)                               xvel1,              &
(   34)                               yvel0,              &
(   35)                               yvel1,              &
(   36)                               zvel0,              &
(   37)                               zvel1)
(   38) 
(   39)   IMPLICIT NONE
(   40) 
(   41)   INTEGER :: x_min,x_max,y_min,y_max,z_min,z_max
(   42)   REAL(KIND=8), DIMENSION(x_min-2:x_max+2,y_min-2:y_max+2,z_min-2:z_max+2) :: density0,energy0
(   43)   REAL(KIND=8), DIMENSION(x_min-2:x_max+2,y_min-2:y_max+2,z_min-2:z_max+2) :: density1,energy1
(   44)   REAL(KIND=8), DIMENSION(x_min-2:x_max+3,y_min-2:y_max+3,z_min-2:z_max+3) :: xvel0,yvel0,zvel0
(   45)   REAL(KIND=8), DIMENSION(x_min-2:x_max+3,y_min-2:y_max+3,z_min-2:z_max+3) :: xvel1,yvel1,zvel1
(   46) 
(   47)   INTEGER :: j,k,l
(   48) 
(   49) !$OMP PARALLEL
(   50) !$OMP DO






PGF90 (Version     13.5)          07/18/2014  14:45:36      page 2

(   51)   DO l=z_min,z_max
(   52)     DO k=y_min,y_max
(   53)        DO j=x_min,x_max
(   54)          density0(j,k,l)=density1(j,k,l)
(   55)        ENDDO
(   56)     ENDDO
(   57)   ENDDO
(   58) !$OMP END DO
(   59) 
(   60) !$OMP DO
(   61)   DO l=z_min,z_max
(   62)     DO k=y_min,y_max
(   63)        DO j=x_min,x_max
(   64)          energy0(j,k,l)=energy1(j,k,l)
(   65)       ENDDO
(   66)     ENDDO
(   67)   ENDDO
(   68) !$OMP END DO
(   69) 
(   70) !$OMP DO
(   71)   DO l=z_min,z_max+1
(   72)     DO k=y_min,y_max+1
(   73)       DO j=x_min,x_max+1
(   74)         xvel0(j,k,l)=xvel1(j,k,l)
(   75)       ENDDO
(   76)     ENDDO
(   77)   ENDDO
(   78) !$OMP END DO
(   79) 
(   80) !$OMP DO
(   81)   DO l=z_min,z_max+1
(   82)     DO k=y_min,y_max+1
(   83)       DO j=x_min,x_max+1
(   84)         yvel0(j,k,l)=yvel1(j,k,l)
(   85)       ENDDO
(   86)     ENDDO
(   87)   ENDDO
(   88) !$OMP END DO
(   89) 
(   90) !$OMP DO
(   91)   DO l=z_min,z_max+1
(   92)     DO k=y_min,y_max+1
(   93)       DO j=x_min,x_max+1
(   94)         zvel0(j,k,l)=zvel1(j,k,l)
(   95)       ENDDO
(   96)     ENDDO
(   97)   ENDDO
(   98) !$OMP END DO
(   99) !$OMP END PARALLEL
(  100) 
(  101) END SUBROUTINE reset_field_kernel
(  102) 
(  103) END MODULE reset_field_kernel_module
