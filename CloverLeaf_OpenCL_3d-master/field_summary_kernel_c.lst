PGC Version 13.5          07/18/2014  14:45:39      page 1


Switches: -list -object -noxref -nocode -debug -nosingle
          -opt 2  -inform severe   
          -noes 
          -def unix
          -def __unix
          -def __unix__
          -def linux
          -def __linux
          -def __linux__
          -def __NO_MATH_INLINES
          -def __x86_64
          -def __x86_64__
          -def __LONG_MAX__=9223372036854775807L
          -def __SIZE_TYPE__=unsigned long int
          -def __PTRDIFF_TYPE__=long int
          -def __THROW=
          -def __extension__=
          -def __amd_64__amd64__
          -def __k8
          -def __k8__
          -def __SSE__
          -def __MMX__
          -def __SSE2__
          -def __SSE3__
          -def __SSSE3__
          -def #machine(x86_64) #lint(off) #system(posix) #cpu(x86_64)
          -def __pgnu_vsn=40407
          -idir /usr/mpi/pgi/mvapich2-1.7-qlc/include
Filename: field_summary_kernel_c.c

(    1) /*Crown Copyright 2012 AWE.
(    2) *
(    3) * This file is part of CloverLeaf.
(    4) *
(    5) * CloverLeaf is free software: you can redistribute it and/or modify it under
(    6) * the terms of the GNU General Public License as published by the
(    7) * Free Software Foundation, either version 3 of the License, or (at your option)
(    8) * any later version.
(    9) *
(   10) * CloverLeaf is distributed in the hope that it will be useful, but
(   11) * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
(   12) * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
(   13) * details.
(   14) *
(   15) * You should have received a copy of the GNU General Public License along with
(   16) * CloverLeaf. If not, see http://www.gnu.org/licenses/. */
(   17) 
(   18) /**
(   19)  *  @brief C field summary kernel
(   20)  *  @author Wayne Gaudin
(   21)  *  @details The total mass, internal energy, kinetic energy and volume weighted
(   22)  *  pressure for the chunk is calculated.
(   23)  */
(   24) 
(   25) #include <stdio.h>
(   26) #include <stdlib.h>
(   27) #include "ftocmacros.h"
(   28) #include <math.h>
(   29) 
(   30) void field_summary_kernel_c_(int *xmin,



PGC Version 13.5          07/18/2014  14:45:39      page 2


(   31)                           int *xmax,
(   32)                           int *ymin,
(   33)                           int *ymax,
(   34)                           double *volume,
(   35)                           double *density0,
(   36)                           double *energy0,
(   37)                           double *pressure,
(   38)                           double *xvel0,
(   39)                           double *yvel0,
(   40)                           double *vl,
(   41)                           double *mss,
(   42)                           double *ien,
(   43)                           double *ken,
(   44)                           double *prss)
(   45) {
(   46) 
(   47)   int x_min=*xmin;
(   48)   int x_max=*xmax;
(   49)   int y_min=*ymin;
(   50)   int y_max=*ymax;
(   51)   double vol=*vl;
(   52)   double mass=*mss;
(   53)   double ie=*ien;
(   54)   double ke=*ken;
(   55)   double press=*prss;
(   56) 
(   57)   int j,k,jv,kv;
(   58)   double vsqrd,cell_vol,cell_mass;
(   59) 
(   60) 
(   61)   vol=0.0;
(   62)   mass=0.0;
(   63)   ie=0.0;
(   64)   ke=0.0;;
(   65)   press=0.0;
(   66) 
(   67) #pragma omp parallel
(   68)  {
(   69) #pragma omp for private(vsqrd,cell_vol,cell_mass) reduction(+ : vol,mass,press,ie,ke,j,jv,kv)
(   70)   for (k=y_min;k<=y_max;k++) {
(   71) #pragma ivdep
(   72)     for (j=x_min;j<=x_max;j++) {
(   73)       vsqrd=0.0;
(   74)       for (kv=k;kv<=k+1;kv++) {
(   75)         for (jv=j;jv<=j+1;jv++) {
(   76)           vsqrd=vsqrd+0.25*(xvel0[FTNREF2D(jv ,kv ,x_max+5,x_min-2,y_min-2)]*xvel0[FTNREF2D(jv ,kv ,x_max+5,x_min-2,y_min-2)
(   77)                            +yvel0[FTNREF2D(jv ,kv ,x_max+5,x_min-2,y_min-2)]*yvel0[FTNREF2D(jv ,kv ,x_max+5,x_min-2,y_min-2)
(   78)         }
(   79)       }
(   80)       cell_vol=volume[FTNREF2D(j  ,k  ,x_max+4,x_min-2,y_min-2)];
(   81)       cell_mass=cell_vol*density0[FTNREF2D(j  ,k  ,x_max+4,x_min-2,y_min-2)];
(   82)       vol=vol+cell_vol;
(   83)       mass=mass+cell_mass;
(   84)       ie=ie+cell_mass*energy0[FTNREF2D(j  ,k  ,x_max+4,x_min-2,y_min-2)];
(   85)       ke=ke+cell_mass*0.5*vsqrd;
(   86)       press=press+cell_vol*pressure[FTNREF2D(j  ,k  ,x_max+4,x_min-2,y_min-2)];
(   87)     }
(   88)   }
(   89) 
(   90)  }



PGC Version 13.5          07/18/2014  14:45:39      page 3


(   91) 
(   92)  *vl=vol;
(   93)  *mss=mass;
(   94)  *ien=ie;
(   95)  *ken=ke;
(   96)  *prss=press;
(   97) 
(   98) }























































