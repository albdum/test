


PGF90 (Version     13.5)          07/18/2014  14:45:28      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir /usr/mpi/pgi/mvapich2-1.7-qlc/include
          -idir /usr/mpi/pgi/mvapich2-1.7-qlc/include
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: calc_dt.f90

(    1) !Crown Copyright 2012 AWE.
(    2) !
(    3) ! This file is part of CloverLeaf.
(    4) !
(    5) ! CloverLeaf is free software: you can redistribute it and/or modify it under 
(    6) ! the terms of the GNU General Public License as published by the 
(    7) ! Free Software Foundation, either version 3 of the License, or (at your option) 
(    8) ! any later version.
(    9) !
(   10) ! CloverLeaf is distributed in the hope that it will be useful, but 
(   11) ! WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
(   12) ! FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
(   13) ! details.
(   14) !
(   15) ! You should have received a copy of the GNU General Public License along with 
(   16) ! CloverLeaf. If not, see http://www.gnu.org/licenses/.
(   17) 
(   18) !>  @brief Driver for the timestep kernels
(   19) !>  @author Wayne Gaudin
(   20) !>  @details Invokes the user specified timestep kernel.
(   21) 
(   22) MODULE calc_dt_module
(   23) 
(   24) CONTAINS
(   25) 
(   26) SUBROUTINE calc_dt(chunk,local_dt,local_control,xl_pos,yl_pos,zl_pos,jldt,kldt,lldt)
(   27) 
(   28)   USE clover_module
(   29)   USE calc_dt_kernel_module
(   30) 
(   31)   IMPLICIT NONE
(   32) 
(   33)   INTEGER          :: chunk
(   34)   REAL(KIND=8)     :: local_dt
(   35)   CHARACTER(LEN=8) :: local_control
(   36)   REAL(KIND=8)     :: xl_pos,yl_pos,zl_pos
(   37)   INTEGER          :: jldt,kldt,lldt
(   38) 
(   39)   INTEGER          :: l_control
(   40)   INTEGER          :: small
(   41) 
(   42)   local_dt=g_big
(   43) 
(   44)   IF(chunks(chunk)%task.NE.parallel%task) RETURN
(   45) 
(   46)   small = 0
(   47) 
(   48)   IF(use_fortran_kernels)THEN
(   49) 
(   50)     CALL calc_dt_kernel(chunks(chunk)%field%x_min,     &






PGF90 (Version     13.5)          07/18/2014  14:45:28      page 2

(   51)                         chunks(chunk)%field%x_max,     &
(   52)                         chunks(chunk)%field%y_min,     &
(   53)                         chunks(chunk)%field%y_max,     &
(   54)                         chunks(chunk)%field%z_min,     &
(   55)                         chunks(chunk)%field%z_max,     &
(   56)                         g_small,                       &
(   57)                         g_big,                         &
(   58)                         dtmin,                         &
(   59)                         dtc_safe,                      &
(   60)                         dtu_safe,                      &
(   61)                         dtv_safe,                      &
(   62)                         dtw_safe,                      &
(   63)                         dtdiv_safe,                    &
(   64)                         chunks(chunk)%field%xarea,     &
(   65)                         chunks(chunk)%field%yarea,     &
(   66)                         chunks(chunk)%field%zarea,     &
(   67)                         chunks(chunk)%field%cellx,     &
(   68)                         chunks(chunk)%field%celly,     &
(   69)                         chunks(chunk)%field%cellz,     &
(   70)                         chunks(chunk)%field%celldx,    &
(   71)                         chunks(chunk)%field%celldy,    &
(   72)                         chunks(chunk)%field%celldz,    &
(   73)                         chunks(chunk)%field%volume,    &
(   74)                         chunks(chunk)%field%density0,  &
(   75)                         chunks(chunk)%field%energy0,   &
(   76)                         chunks(chunk)%field%pressure,  &
(   77)                         chunks(chunk)%field%viscosity, &
(   78)                         chunks(chunk)%field%soundspeed,&
(   79)                         chunks(chunk)%field%xvel0,     &
(   80)                         chunks(chunk)%field%yvel0,     &
(   81)                         chunks(chunk)%field%zvel0,     &
(   82)                         chunks(chunk)%field%work_array1,&
(   83)                         local_dt,                      &
(   84)                         l_control,                     &
(   85)                         xl_pos,                        &
(   86)                         yl_pos,                        &
(   87)                         zl_pos,                        &
(   88)                         jldt,                          &
(   89)                         kldt,                          &
(   90)                         lldt,                          &
(   91)                         small                          )
(   92) 
(   93)   ELSEIF(use_opencl_kernels)THEN
(   94) 
(   95)     CALL calc_dt_kernel_ocl(g_small, &
(   96)                             g_big, &
(   97)                             dtmin, &
(   98)                             dtc_safe, &
(   99)                             dtu_safe, &
(  100)                             dtv_safe, &
(  101)                             dtw_safe, &
(  102)                             dtdiv_safe, &
(  103)                             local_dt, &
(  104)                             l_control, &
(  105)                             xl_pos, &
(  106)                             yl_pos, &
(  107)                             zl_pos, &
(  108)                             jldt, &






PGF90 (Version     13.5)          07/18/2014  14:45:28      page 3

(  109)                             kldt, &
(  110)                             lldt, &
(  111)                             small )
(  112) 
(  113)   ELSEIF(use_C_kernels)THEN
(  114) 
(  115)     CALL calc_dt_kernel_c(chunks(chunk)%field%x_min,   &
(  116)                         chunks(chunk)%field%x_max,     &
(  117)                         chunks(chunk)%field%y_min,     &
(  118)                         chunks(chunk)%field%y_max,     &
(  119)                         chunks(chunk)%field%z_min,     &
(  120)                         chunks(chunk)%field%z_max,     &
(  121)                         g_small,                       &
(  122)                         g_big,                         &
(  123)                         dtmin,                         &
(  124)                         dtc_safe,                      &
(  125)                         dtu_safe,                      &
(  126)                         dtv_safe,                      &
(  127)                         dtw_safe,                      &
(  128)                         dtdiv_safe,                    &
(  129)                         chunks(chunk)%field%xarea,     &
(  130)                         chunks(chunk)%field%yarea,     &
(  131)                         chunks(chunk)%field%zarea,     &
(  132)                         chunks(chunk)%field%cellx,     &
(  133)                         chunks(chunk)%field%celly,     &
(  134)                         chunks(chunk)%field%cellz,     &
(  135)                         chunks(chunk)%field%celldx,    &
(  136)                         chunks(chunk)%field%celldy,    &
(  137)                         chunks(chunk)%field%celldz,    &
(  138)                         chunks(chunk)%field%volume,    &
(  139)                         chunks(chunk)%field%density0,  &
(  140)                         chunks(chunk)%field%energy0,   &
(  141)                         chunks(chunk)%field%pressure,  &
(  142)                         chunks(chunk)%field%viscosity, &
(  143)                         chunks(chunk)%field%soundspeed,&
(  144)                         chunks(chunk)%field%xvel0,     &
(  145)                         chunks(chunk)%field%yvel0,     &
(  146)                         chunks(chunk)%field%zvel0,     &
(  147)                         chunks(chunk)%field%work_array1,&
(  148)                         local_dt,                      &
(  149)                         l_control,                     &
(  150)                         xl_pos,                        &
(  151)                         yl_pos,                        &
(  152)                         zl_pos,                        &
(  153)                         jldt,                          &
(  154)                         kldt,                          &
(  155)                         lldt,                          &
(  156)                         small                          )
(  157) 
(  158)   ENDIF 
(  159) 
(  160)   IF(l_control.EQ.1) local_control='sound'
(  161)   IF(l_control.EQ.2) local_control='xvel'
(  162)   IF(l_control.EQ.3) local_control='yvel'
(  163)   IF(l_control.EQ.4) local_control='zvel'
(  164)   IF(l_control.EQ.5) local_control='div'
(  165) 
(  166) END SUBROUTINE calc_dt






PGF90 (Version     13.5)          07/18/2014  14:45:28      page 4

(  167) 
(  168) END MODULE calc_dt_module
