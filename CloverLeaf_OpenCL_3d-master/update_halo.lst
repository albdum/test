


PGF90 (Version     13.5)          07/18/2014  14:45:24      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir /usr/mpi/pgi/mvapich2-1.7-qlc/include
          -idir /usr/mpi/pgi/mvapich2-1.7-qlc/include
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: update_halo.f90

(    1) !Crown Copyright 2012 AWE.
(    2) !
(    3) ! This file is part of CloverLeaf.
(    4) !
(    5) ! CloverLeaf is free software: you can redistribute it and/or modify it under 
(    6) ! the terms of the GNU General Public License as published by the 
(    7) ! Free Software Foundation, either version 3 of the License, or (at your option) 
(    8) ! any later version.
(    9) !
(   10) ! CloverLeaf is distributed in the hope that it will be useful, but 
(   11) ! WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
(   12) ! FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
(   13) ! details.
(   14) !
(   15) ! You should have received a copy of the GNU General Public License along with 
(   16) ! CloverLeaf. If not, see http://www.gnu.org/licenses/.
(   17) 
(   18) !>  @brief Driver for the halo updates
(   19) !>  @author Wayne Gaudin
(   20) !>  @details Invokes the kernels for the internal and external halo cells for
(   21) !>  the fields specified.
(   22) 
(   23) MODULE update_halo_module
(   24) 
(   25) CONTAINS
(   26) 
(   27) SUBROUTINE update_halo(fields,depth)
(   28) 
(   29)   USE clover_module
(   30)   USE update_halo_kernel_module
(   31) 
(   32)   IMPLICIT NONE
(   33) 
(   34)   INTEGER :: c,fields(NUM_FIELDS),depth
(   35) 
(   36)   CALL clover_exchange(fields,depth)
(   37) 
(   38)   DO c=1,chunks_per_task
(   39) 
(   40)     IF(chunks(c)%task.EQ.parallel%task) THEN
(   41) 
(   42)       IF(use_fortran_kernels)THEN
(   43)         CALL update_halo_kernel(chunks(c)%field%x_min,          &
(   44)                                 chunks(c)%field%x_max,          &
(   45)                                 chunks(c)%field%y_min,          &
(   46)                                 chunks(c)%field%y_max,          &
(   47)                                 chunks(c)%field%z_min,          &
(   48)                                 chunks(c)%field%z_max,          &
(   49)                                 chunks(c)%chunk_neighbours,     &
(   50)                                 chunks(c)%field%density0,       &






PGF90 (Version     13.5)          07/18/2014  14:45:24      page 2

(   51)                                 chunks(c)%field%energy0,        &
(   52)                                 chunks(c)%field%pressure,       &
(   53)                                 chunks(c)%field%viscosity,      &
(   54)                                 chunks(c)%field%soundspeed,     &
(   55)                                 chunks(c)%field%density1,       &
(   56)                                 chunks(c)%field%energy1,        &
(   57)                                 chunks(c)%field%xvel0,          &
(   58)                                 chunks(c)%field%yvel0,          &
(   59)                                 chunks(c)%field%zvel0,          &
(   60)                                 chunks(c)%field%xvel1,          &
(   61)                                 chunks(c)%field%yvel1,          &
(   62)                                 chunks(c)%field%zvel1,          &
(   63)                                 chunks(c)%field%vol_flux_x,     &
(   64)                                 chunks(c)%field%vol_flux_y,     &
(   65)                                 chunks(c)%field%vol_flux_z,     &
(   66)                                 chunks(c)%field%mass_flux_x,    &
(   67)                                 chunks(c)%field%mass_flux_y,    &
(   68)                                 chunks(c)%field%mass_flux_z,    &
(   69)                                 fields,                         &
(   70)                                 depth                           )
(   71)       ELSEIF(use_opencl_kernels)THEN
(   72) 	CALL update_halo_kernel_ocl(chunks(c)%chunk_neighbours, &
(   73)                                     fields, &
(   74)                                     depth )
(   75)       ELSEIF(use_C_kernels)THEN
(   76)         CALL update_halo_kernel_c(chunks(c)%field%x_min,        &
(   77)                                 chunks(c)%field%x_max,          &
(   78)                                 chunks(c)%field%y_min,          &
(   79)                                 chunks(c)%field%y_max,          &
(   80)                                 chunks(c)%field%z_min,          &
(   81)                                 chunks(c)%field%z_max,          &
(   82)                                 chunks(c)%chunk_neighbours,     &
(   83)                                 chunks(c)%field%density0,       &
(   84)                                 chunks(c)%field%energy0,        &
(   85)                                 chunks(c)%field%pressure,       &
(   86)                                 chunks(c)%field%viscosity,      &
(   87)                                 chunks(c)%field%soundspeed,     &
(   88)                                 chunks(c)%field%density1,       &
(   89)                                 chunks(c)%field%energy1,        &
(   90)                                 chunks(c)%field%xvel0,          &
(   91)                                 chunks(c)%field%yvel0,          &
(   92)                                 chunks(c)%field%zvel0,          &
(   93)                                 chunks(c)%field%xvel1,          &
(   94)                                 chunks(c)%field%yvel1,          &
(   95)                                 chunks(c)%field%zvel1,          &
(   96)                                 chunks(c)%field%vol_flux_x,     &
(   97)                                 chunks(c)%field%vol_flux_y,     &
(   98)                                 chunks(c)%field%vol_flux_z,     &
(   99)                                 chunks(c)%field%mass_flux_x,    &
(  100)                                 chunks(c)%field%mass_flux_y,    &
(  101)                                 chunks(c)%field%mass_flux_z,    &
(  102)                                 fields,                         &
(  103)                                 depth                           )
(  104)       ENDIF
(  105)     ENDIF
(  106) 
(  107)   ENDDO
(  108) 






PGF90 (Version     13.5)          07/18/2014  14:45:24      page 3

(  109) END SUBROUTINE update_halo
(  110) 
(  111) END MODULE update_halo_module
