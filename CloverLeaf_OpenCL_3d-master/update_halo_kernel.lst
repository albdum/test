


PGF90 (Version     13.5)          07/18/2014  14:45:18      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir /usr/mpi/pgi/mvapich2-1.7-qlc/include
          -idir /usr/mpi/pgi/mvapich2-1.7-qlc/include
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: update_halo_kernel.f90

(    1) !Crown Copyright 2012 AWE.
(    2) !
(    3) ! This file is part of CloverLeaf.
(    4) !
(    5) ! CloverLeaf is free software: you can redistribute it and/or modify it under 
(    6) ! the terms of the GNU General Public License as published by the 
(    7) ! Free Software Foundation, either version 3 of the License, or (at your option) 
(    8) ! any later version.
(    9) !
(   10) ! CloverLeaf is distributed in the hope that it will be useful, but 
(   11) ! WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
(   12) ! FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
(   13) ! details.
(   14) !
(   15) ! You should have received a copy of the GNU General Public License along with 
(   16) ! CloverLeaf. If not, see http://www.gnu.org/licenses/.
(   17) 
(   18) !>  @brief Fortran kernel to update the external halo cells in a chunk.
(   19) !>  @author Wayne Gaudin
(   20) !>  @details Updates halo cells for the required fields at the required depth
(   21) !>  for any halo cells that lie on an external boundary. The location and type
(   22) !>  of data governs how this is carried out. External boundaries are always
(   23) !>  reflective.
(   24) 
(   25) ! Notes
(   26) ! More fields to add and corrections to be made
(   27) 
(   28) MODULE update_halo_kernel_module
(   29) 
(   30) CONTAINS
(   31) 
(   32)   SUBROUTINE update_halo_kernel(x_min,x_max,y_min,y_max,z_min,z_max,                &
(   33)                         chunk_neighbours,                                           &
(   34)                         density0,                                                   &
(   35)                         energy0,                                                    &
(   36)                         pressure,                                                   &
(   37)                         viscosity,                                                  &
(   38)                         soundspeed,                                                 &
(   39)                         density1,                                                   &
(   40)                         energy1,                                                    &
(   41)                         xvel0,                                                      &
(   42)                         yvel0,                                                      &
(   43)                         zvel0,                                                      &
(   44)                         xvel1,                                                      &
(   45)                         yvel1,                                                      &
(   46)                         zvel1,                                                      &
(   47)                         vol_flux_x,                                                 &
(   48)                         vol_flux_y,                                                 &
(   49)                         vol_flux_z,                                                 &
(   50)                         mass_flux_x,                                                &






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 2

(   51)                         mass_flux_y,                                                &
(   52)                         mass_flux_z,                                                &
(   53)                         fields,                                                     &
(   54)                         depth                                                       )
(   55)   IMPLICIT NONE
(   56) 
(   57)   INTEGER :: x_min,x_max,y_min,y_max,z_min,z_max
(   58)   INTEGER, DIMENSION(6) :: chunk_neighbours
(   59)   REAL(KIND=8), DIMENSION(x_min-2:x_max+2,y_min-2:y_max+2,z_min-2:z_max+2) :: density0,energy0
(   60)   REAL(KIND=8), DIMENSION(x_min-2:x_max+2,y_min-2:y_max+2,z_min-2:z_max+2) :: pressure,viscosity,soundspeed
(   61)   REAL(KIND=8), DIMENSION(x_min-2:x_max+2,y_min-2:y_max+2,z_min-2:z_max+2) :: density1,energy1
(   62)   REAL(KIND=8), DIMENSION(x_min-2:x_max+3,y_min-2:y_max+3,z_min-2:z_max+3) :: xvel0,yvel0,zvel0
(   63)   REAL(KIND=8), DIMENSION(x_min-2:x_max+3,y_min-2:y_max+3,z_min-2:z_max+3) :: xvel1,yvel1,zvel1
(   64)   REAL(KIND=8), DIMENSION(x_min-2:x_max+3,y_min-2:y_max+2,z_min-2:z_max+2) :: vol_flux_x,mass_flux_x
(   65)   REAL(KIND=8), DIMENSION(x_min-2:x_max+2,y_min-2:y_max+3,z_min-2:z_max+2) :: vol_flux_y,mass_flux_y
(   66)   REAL(KIND=8), DIMENSION(x_min-2:x_max+2,y_min-2:y_max+2,z_min-2:z_max+3) :: vol_flux_z,mass_flux_z
(   67)   INTEGER :: fields(:),depth
(   68) 
(   69)   ! These need to be kept consistent with the data module to avoid use statement
(   70)   INTEGER,      PARAMETER :: CHUNK_LEFT   =1    &
(   71)                             ,CHUNK_RIGHT  =2    &
(   72)                             ,CHUNK_BOTTOM =3    &
(   73)                             ,CHUNK_TOP    =4    &
(   74)                             ,CHUNK_BACK   =5    &
(   75)                             ,CHUNK_FRONT  =6    &
(   76)                             ,EXTERNAL_FACE=-1
(   77) 
(   78)   INTEGER,      PARAMETER :: FIELD_DENSITY0   = 1         &
(   79)                             ,FIELD_DENSITY1   = 2         &
(   80)                             ,FIELD_ENERGY0    = 3         &
(   81)                             ,FIELD_ENERGY1    = 4         &
(   82)                             ,FIELD_PRESSURE   = 5         &
(   83)                             ,FIELD_VISCOSITY  = 6         &
(   84)                             ,FIELD_SOUNDSPEED = 7         &
(   85)                             ,FIELD_XVEL0      = 8         &
(   86)                             ,FIELD_XVEL1      = 9         &
(   87)                             ,FIELD_YVEL0      =10         &
(   88)                             ,FIELD_YVEL1      =11         &
(   89)                             ,FIELD_ZVEL0      =12         &
(   90)                             ,FIELD_ZVEL1      =13         &
(   91)                             ,FIELD_VOL_FLUX_X =14         & 
(   92)                             ,FIELD_VOL_FLUX_Y =15         & 
(   93)                             ,FIELD_VOL_FLUX_Z =16         & 
(   94)                             ,FIELD_MASS_FLUX_X=17         &
(   95)                             ,FIELD_MASS_FLUX_Y=18         &
(   96)                             ,FIELD_MASS_FLUX_Z=19
(   97) 
(   98)   INTEGER :: j,k,l
(   99) 
(  100) !$OMP PARALLEL PRIVATE(j,k)
(  101) 
(  102)   ! Update values in external halo cells based on depth and fields requested
(  103)   ! Even though half of these loops look the wrong way around, it should be noted
(  104)   ! that depth is either 1 or 2 so that it is more efficient to always thread
(  105)   ! loop along the mesh edge.
(  106)   IF(fields(FIELD_DENSITY0).EQ.1) THEN
(  107)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  108) !$OMP DO






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 3

(  109)       DO l=z_min-depth,z_max+depth
(  110)         DO j=x_min-depth,x_max+depth
(  111)           DO k=1,depth
(  112)             density0(j,1-k,l)=density0(j,0+k,l)
(  113)           ENDDO
(  114)         ENDDO
(  115)       ENDDO
(  116) !$OMP END DO
(  117)     ENDIF
(  118)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  119) !$OMP DO
(  120)       DO l=z_min-depth,z_max+depth
(  121)         DO j=x_min-depth,x_max+depth
(  122)           DO k=1,depth
(  123)             density0(j,y_max+k,l)=density0(j,y_max+1-k,l)
(  124)           ENDDO
(  125)         ENDDO
(  126)       ENDDO
(  127) !$OMP END DO
(  128)     ENDIF
(  129)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  130) !$OMP DO
(  131)       DO l=z_min-depth,z_max+depth
(  132)         DO k=y_min-depth,y_max+depth
(  133)           DO j=1,depth
(  134)             density0(1-j,k,l)=density0(0+j,k,l)
(  135)           ENDDO
(  136)         ENDDO
(  137)       ENDDO
(  138) !$OMP END DO
(  139)     ENDIF
(  140)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  141) !$OMP DO
(  142)       DO l=z_min-depth,z_max+depth
(  143)         DO k=y_min-depth,y_max+depth
(  144)           DO j=1,depth
(  145)             density0(x_max+j,k,l)=density0(x_max+1-j,k,l)
(  146)           ENDDO
(  147)         ENDDO
(  148)       ENDDO
(  149) !$OMP END DO
(  150)     ENDIF
(  151)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  152) !$OMP DO
(  153)       DO k=y_min-depth,y_max+depth
(  154)         DO j=x_min-depth,x_max+depth
(  155)           DO l=1,depth
(  156)             density0(j,k,1-l)=density0(j,k,0+l)
(  157)           ENDDO
(  158)         ENDDO
(  159)       ENDDO
(  160) !$OMP END DO
(  161)     ENDIF
(  162)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  163) !$OMP DO
(  164)       DO k=y_min-depth,y_max+depth
(  165)         DO j=x_min-depth,x_max+depth
(  166)           DO l=1,depth






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 4

(  167)             density0(j,k,z_max+l)=density0(j,k,z_max+1-l)
(  168)           ENDDO
(  169)         ENDDO
(  170)       ENDDO
(  171) !$OMP END DO
(  172)     ENDIF
(  173)   ENDIF
(  174) 
(  175)   IF(fields(FIELD_DENSITY1).EQ.1) THEN
(  176)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  177) !$OMP DO
(  178)       DO l=z_min-depth,z_max+depth
(  179)         DO j=x_min-depth,x_max+depth
(  180)           DO k=1,depth
(  181)             density1(j,1-k,l)=density1(j,0+k,l)
(  182)           ENDDO
(  183)         ENDDO
(  184)       ENDDO
(  185) !$OMP END DO
(  186)     ENDIF
(  187)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  188) !$OMP DO
(  189)       DO l=z_min-depth,z_max+depth
(  190)         DO j=x_min-depth,x_max+depth
(  191)           DO k=1,depth
(  192)             density1(j,y_max+k,l)=density1(j,y_max+1-k,l)
(  193)           ENDDO
(  194)         ENDDO
(  195)       ENDDO
(  196) !$OMP END DO
(  197)     ENDIF
(  198)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  199) !$OMP DO
(  200)       DO l=z_min-depth,z_max+depth
(  201)         DO k=y_min-depth,y_max+depth
(  202)           DO j=1,depth
(  203)             density1(1-j,k,l)=density1(0+j,k,l)
(  204)           ENDDO
(  205)         ENDDO
(  206)       ENDDO
(  207) !$OMP END DO
(  208)     ENDIF
(  209)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  210) !$OMP DO
(  211)       DO l=z_min-depth,z_max+depth
(  212)         DO k=y_min-depth,y_max+depth
(  213)           DO j=1,depth
(  214)             density1(x_max+j,k,l)=density1(x_max+1-j,k,l)
(  215)           ENDDO
(  216)         ENDDO
(  217)       ENDDO
(  218) !$OMP END DO
(  219)     ENDIF
(  220)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  221) !$OMP DO
(  222)       DO k=y_min-depth,y_max+depth
(  223)         DO j=x_min-depth,x_max+depth
(  224)           DO l=1,depth






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 5

(  225)             density1(j,k,1-l)=density1(j,k,0+l)
(  226)           ENDDO
(  227)         ENDDO
(  228)       ENDDO
(  229) !$OMP END DO
(  230)     ENDIF
(  231)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  232) !$OMP DO
(  233)       DO k=y_min-depth,y_max+depth
(  234)         DO j=x_min-depth,x_max+depth
(  235)           DO l=1,depth
(  236)             density1(j,k,z_max+l)=density1(j,k,z_max+1-l)
(  237)           ENDDO
(  238)         ENDDO
(  239)       ENDDO
(  240) !$OMP END DO
(  241)     ENDIF
(  242)   ENDIF
(  243) 
(  244)   IF(fields(FIELD_ENERGY0).EQ.1) THEN
(  245)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  246) !$OMP DO
(  247)       DO l=z_min-depth,z_max+depth
(  248)         DO j=x_min-depth,x_max+depth
(  249)           DO k=1,depth
(  250)             energy0(j,1-k,l)=energy0(j,0+k,l)
(  251)           ENDDO
(  252)         ENDDO
(  253)       ENDDO
(  254) !$OMP END DO
(  255)     ENDIF
(  256)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  257) !$OMP DO
(  258)       DO l=z_min-depth,z_max+depth
(  259)         DO j=x_min-depth,x_max+depth
(  260)           DO k=1,depth
(  261)             energy0(j,y_max+k,l)=energy0(j,y_max+1-k,l)
(  262)           ENDDO
(  263)         ENDDO
(  264)       ENDDO
(  265) !$OMP END DO
(  266)     ENDIF
(  267)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  268) !$OMP DO
(  269)       DO l=z_min-depth,z_max+depth
(  270)         DO k=y_min-depth,y_max+depth
(  271)           DO j=1,depth
(  272)             energy0(1-j,k,l)=energy0(0+j,k,l)
(  273)           ENDDO
(  274)         ENDDO
(  275)       ENDDO
(  276) !$OMP END DO
(  277)     ENDIF
(  278)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  279) !$OMP DO
(  280)       DO l=z_min-depth,z_max+depth
(  281)         DO k=y_min-depth,y_max+depth
(  282)           DO j=1,depth






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 6

(  283)             energy0(x_max+j,k,l)=energy0(x_max+1-j,k,l)
(  284)           ENDDO
(  285)         ENDDO
(  286)       ENDDO
(  287) !$OMP END DO
(  288)     ENDIF
(  289)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  290) !$OMP DO
(  291)       DO k=y_min-depth,y_max+depth
(  292)         DO j=x_min-depth,x_max+depth
(  293)           DO l=1,depth
(  294)             energy0(j,k,1-l)=energy0(j,k,0+l)
(  295)           ENDDO
(  296)         ENDDO
(  297)       ENDDO
(  298) !$OMP END DO
(  299)     ENDIF
(  300)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  301) !$OMP DO
(  302)       DO k=y_min-depth,y_max+depth
(  303)         DO j=x_min-depth,x_max+depth
(  304)           DO l=1,depth
(  305)             energy0(j,k,z_max+l)=energy0(j,k,z_max+1-l)
(  306)           ENDDO
(  307)         ENDDO
(  308)       ENDDO
(  309) !$OMP END DO
(  310)     ENDIF
(  311)   ENDIF
(  312) 
(  313)   IF(fields(FIELD_ENERGY1).EQ.1) THEN
(  314)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  315) !$OMP DO
(  316)       DO l=z_min-depth,z_max+depth
(  317)         DO j=x_min-depth,x_max+depth
(  318)           DO k=1,depth
(  319)             energy1(j,1-k,l)=energy1(j,0+k,l)
(  320)           ENDDO
(  321)         ENDDO
(  322)       ENDDO
(  323) !$OMP END DO
(  324)     ENDIF
(  325)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  326) !$OMP DO
(  327)       DO l=z_min-depth,z_max+depth
(  328)         DO j=x_min-depth,x_max+depth
(  329)           DO k=1,depth
(  330)             energy1(j,y_max+k,l)=energy1(j,y_max+1-k,l)
(  331)           ENDDO
(  332)         ENDDO
(  333)       ENDDO
(  334) !$OMP END DO
(  335)     ENDIF
(  336)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  337) !$OMP DO
(  338)       DO l=z_min-depth,z_max+depth
(  339)         DO k=y_min-depth,y_max+depth
(  340)           DO j=1,depth






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 7

(  341)             energy1(1-j,k,l)=energy1(0+j,k,l)
(  342)           ENDDO
(  343)         ENDDO
(  344)       ENDDO
(  345) !$OMP END DO
(  346)     ENDIF
(  347)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  348) !$OMP DO
(  349)       DO l=z_min-depth,z_max+depth
(  350)         DO k=y_min-depth,y_max+depth
(  351)           DO j=1,depth
(  352)             energy1(x_max+j,k,l)=energy1(x_max+1-j,k,l)
(  353)           ENDDO
(  354)         ENDDO
(  355)       ENDDO
(  356) !$OMP END DO
(  357)     ENDIF
(  358)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  359) !$OMP DO
(  360)       DO k=y_min-depth,y_max+depth
(  361)         DO j=x_min-depth,x_max+depth
(  362)           DO l=1,depth
(  363)             energy1(j,k,1-l)=energy1(j,k,0+l)
(  364)           ENDDO
(  365)         ENDDO
(  366)       ENDDO
(  367) !$OMP END DO
(  368)     ENDIF
(  369)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  370) !$OMP DO
(  371)       DO k=y_min-depth,y_max+depth
(  372)         DO j=x_min-depth,x_max+depth
(  373)           DO l=1,depth
(  374)             energy1(j,k,z_max+l)=energy1(j,k,z_max+1-l)
(  375)           ENDDO
(  376)         ENDDO
(  377)       ENDDO
(  378) !$OMP END DO
(  379)     ENDIF
(  380)   ENDIF
(  381) 
(  382)   IF(fields(FIELD_PRESSURE).EQ.1) THEN
(  383)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  384) !$OMP DO
(  385)       DO l=z_min-depth,z_max+depth
(  386)         DO j=x_min-depth,x_max+depth
(  387)           DO k=1,depth
(  388)             pressure(j,1-k,l)=pressure(j,0+k,l)
(  389)           ENDDO
(  390)         ENDDO
(  391)       ENDDO
(  392) !$OMP END DO
(  393)     ENDIF
(  394)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  395) !$OMP DO
(  396)       DO l=z_min-depth,z_max+depth
(  397)         DO j=x_min-depth,x_max+depth
(  398)           DO k=1,depth






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 8

(  399)             pressure(j,y_max+k,l)=pressure(j,y_max+1-k,l)
(  400)           ENDDO
(  401)         ENDDO
(  402)       ENDDO
(  403) !$OMP END DO
(  404)     ENDIF
(  405)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  406) !$OMP DO
(  407)       DO l=z_min-depth,z_max+depth
(  408)         DO k=y_min-depth,y_max+depth
(  409)           DO j=1,depth
(  410)             pressure(1-j,k,l)=pressure(0+j,k,l)
(  411)           ENDDO
(  412)         ENDDO
(  413)       ENDDO
(  414) !$OMP END DO
(  415)     ENDIF
(  416)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  417) !$OMP DO
(  418)       DO l=z_min-depth,z_max+depth
(  419)         DO k=y_min-depth,y_max+depth
(  420)           DO j=1,depth
(  421)             pressure(x_max+j,k,l)=pressure(x_max+1-j,k,l)
(  422)           ENDDO
(  423)         ENDDO
(  424)       ENDDO
(  425) !$OMP END DO
(  426)     ENDIF
(  427)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  428) !$OMP DO
(  429)       DO k=y_min-depth,y_max+depth
(  430)         DO j=x_min-depth,x_max+depth
(  431)           DO l=1,depth
(  432)             pressure(j,k,1-l)=pressure(j,k,0+l)
(  433)           ENDDO
(  434)         ENDDO
(  435)       ENDDO
(  436) !$OMP END DO
(  437)     ENDIF
(  438)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  439) !$OMP DO
(  440)       DO k=y_min-depth,y_max+depth
(  441)         DO j=x_min-depth,x_max+depth
(  442)           DO l=1,depth
(  443)             pressure(j,k,z_max+l)=pressure(j,k,z_max+1-l)
(  444)           ENDDO
(  445)         ENDDO
(  446)       ENDDO
(  447) !$OMP END DO
(  448)     ENDIF
(  449)   ENDIF
(  450) 
(  451)   IF(fields(FIELD_VISCOSITY).EQ.1) THEN
(  452)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  453) !$OMP DO
(  454)       DO l=z_min-depth,z_max+depth
(  455)         DO j=x_min-depth,x_max+depth
(  456)           DO k=1,depth






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 9

(  457)             viscosity(j,1-k,l)=viscosity(j,0+k,l)
(  458)           ENDDO
(  459)         ENDDO
(  460)       ENDDO
(  461) !$OMP END DO
(  462)     ENDIF
(  463)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  464) !$OMP DO
(  465)       DO l=z_min-depth,z_max+depth
(  466)         DO j=x_min-depth,x_max+depth
(  467)           DO k=1,depth
(  468)             viscosity(j,y_max+k,l)=viscosity(j,y_max+1-k,l)
(  469)           ENDDO
(  470)         ENDDO
(  471)       ENDDO
(  472) !$OMP END DO
(  473)     ENDIF
(  474)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  475) !$OMP DO
(  476)       DO l=z_min-depth,z_max+depth
(  477)         DO k=y_min-depth,y_max+depth
(  478)           DO j=1,depth
(  479)             viscosity(1-j,k,l)=viscosity(0+j,k,l)
(  480)           ENDDO
(  481)         ENDDO
(  482)       ENDDO
(  483) !$OMP END DO
(  484)     ENDIF
(  485)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  486) !$OMP DO
(  487)       DO l=z_min-depth,z_max+depth
(  488)         DO k=y_min-depth,y_max+depth
(  489)           DO j=1,depth
(  490)             viscosity(x_max+j,k,l)=viscosity(x_max+1-j,k,l)
(  491)           ENDDO
(  492)         ENDDO
(  493)       ENDDO
(  494) !$OMP END DO
(  495)     ENDIF
(  496)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  497) !$OMP DO
(  498)       DO k=y_min-depth,y_max+depth
(  499)         DO j=x_min-depth,x_max+depth
(  500)           DO l=1,depth
(  501)             viscosity(j,k,1-l)=viscosity(j,k,0+l)
(  502)           ENDDO
(  503)         ENDDO
(  504)       ENDDO
(  505) !$OMP END DO
(  506)     ENDIF
(  507)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  508) !$OMP DO
(  509)       DO k=y_min-depth,y_max+depth
(  510)         DO j=x_min-depth,x_max+depth
(  511)           DO l=1,depth
(  512)             viscosity(j,k,z_max+l)=viscosity(j,k,z_max+1-l)
(  513)           ENDDO
(  514)         ENDDO






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 10

(  515)       ENDDO
(  516) !$OMP END DO
(  517)     ENDIF
(  518)   ENDIF
(  519) 
(  520)   IF(fields(FIELD_SOUNDSPEED).EQ.1) THEN
(  521)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  522) !$OMP DO
(  523)       DO l=z_min-depth,z_max+depth
(  524)         DO j=x_min-depth,x_max+depth
(  525)           DO k=1,depth
(  526)             soundspeed(j,1-k,l)=soundspeed(j,0+k,l)
(  527)           ENDDO
(  528)         ENDDO
(  529)       ENDDO
(  530) !$OMP END DO
(  531)     ENDIF
(  532)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  533) !$OMP DO
(  534)       DO l=z_min-depth,z_max+depth
(  535)         DO j=x_min-depth,x_max+depth
(  536)           DO k=1,depth
(  537)             soundspeed(j,y_max+k,l)=soundspeed(j,y_max+1-k,l)
(  538)           ENDDO
(  539)         ENDDO
(  540)       ENDDO
(  541) !$OMP END DO
(  542)     ENDIF
(  543)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  544) !$OMP DO
(  545)       DO l=z_min-depth,z_max+depth
(  546)         DO k=y_min-depth,y_max+depth
(  547)           DO j=1,depth
(  548)             soundspeed(1-j,k,l)=soundspeed(0+j,k,l)
(  549)           ENDDO
(  550)         ENDDO
(  551)       ENDDO
(  552) !$OMP END DO
(  553)     ENDIF
(  554)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  555) !$OMP DO
(  556)       DO l=z_min-depth,z_max+depth
(  557)         DO k=y_min-depth,y_max+depth
(  558)           DO j=1,depth
(  559)             soundspeed(x_max+j,k,l)=soundspeed(x_max+1-j,k,l)
(  560)           ENDDO
(  561)         ENDDO
(  562)       ENDDO
(  563) !$OMP END DO
(  564)     ENDIF
(  565)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  566) !$OMP DO
(  567)       DO k=y_min-depth,y_max+depth
(  568)         DO j=x_min-depth,x_max+depth
(  569)           DO l=1,depth
(  570)             soundspeed(j,k,1-l)=soundspeed(j,k,0+l)
(  571)           ENDDO
(  572)         ENDDO






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 11

(  573)       ENDDO
(  574) !$OMP END DO
(  575)     ENDIF
(  576)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  577) !$OMP DO
(  578)       DO k=y_min-depth,y_max+depth
(  579)         DO j=x_min-depth,x_max+depth
(  580)           DO l=1,depth
(  581)             soundspeed(j,k,z_max+l)=soundspeed(j,k,z_max+1-l)
(  582)           ENDDO
(  583)         ENDDO
(  584)       ENDDO
(  585) !$OMP END DO
(  586)     ENDIF
(  587)   ENDIF
(  588) 
(  589)   IF(fields(FIELD_XVEL0).EQ.1) THEN
(  590)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  591) !$OMP DO
(  592)       DO l=z_min-depth,z_max+1+depth
(  593)         DO j=x_min-depth,x_max+1+depth
(  594)           DO k=1,depth
(  595)             xvel0(j,1-k,l)=xvel0(j,1+k,l)
(  596)           ENDDO
(  597)         ENDDO
(  598)       ENDDO
(  599) !$OMP END DO
(  600)     ENDIF
(  601)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  602) !$OMP DO
(  603)       DO l=z_min-depth,z_max+1+depth
(  604)         DO j=x_min-depth,x_max+1+depth
(  605)           DO k=1,depth
(  606)             xvel0(j,y_max+1+k,l)=xvel0(j,y_max+1-k,l)
(  607)           ENDDO
(  608)         ENDDO
(  609)       ENDDO
(  610) !$OMP END DO
(  611)     ENDIF
(  612)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  613) !$OMP DO
(  614)       DO l=z_min-depth,z_max+1+depth
(  615)         DO k=y_min-depth,y_max+1+depth
(  616)           DO j=1,depth
(  617)             xvel0(1-j,k,l)=-xvel0(1+j,k,l)
(  618)           ENDDO
(  619)         ENDDO
(  620)       ENDDO
(  621) !$OMP END DO
(  622)     ENDIF
(  623)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  624) !$OMP DO
(  625)       DO l=z_min-depth,z_max+1+depth
(  626)         DO k=y_min-depth,y_max+1+depth
(  627)           DO j=1,depth
(  628)             xvel0(x_max+1+j,k,l)=-xvel0(x_max+1-j,k,l)
(  629)           ENDDO
(  630)         ENDDO






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 12

(  631)       ENDDO
(  632) !$OMP END DO
(  633)     ENDIF
(  634)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  635) !$OMP DO
(  636)       DO k=y_min-depth,y_max+1+depth
(  637)         DO j=x_min-depth,x_max+1+depth
(  638)           DO l=1,depth
(  639)             xvel0(j,k,1-l)=xvel0(j,k,1+l)
(  640)           ENDDO
(  641)         ENDDO
(  642)       ENDDO
(  643) !$OMP END DO
(  644)     ENDIF
(  645)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  646) !$OMP DO
(  647)       DO k=y_min-depth,y_max+1+depth
(  648)         DO j=x_min-depth,x_max+1+depth
(  649)           DO l=1,depth
(  650)             xvel0(j,k,z_max+1+l)=xvel0(j,k,z_max+1-l)
(  651)           ENDDO
(  652)         ENDDO
(  653)       ENDDO
(  654) !$OMP END DO
(  655)     ENDIF
(  656)   ENDIF
(  657) 
(  658)   IF(fields(FIELD_XVEL1).EQ.1) THEN
(  659)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  660) !$OMP DO
(  661)       DO l=z_min-depth,z_max+1+depth
(  662)         DO j=x_min-depth,x_max+1+depth
(  663)           DO k=1,depth
(  664)             xvel1(j,1-k,l)=xvel1(j,1+k,l)
(  665)           ENDDO
(  666)         ENDDO
(  667)       ENDDO
(  668) !$OMP END DO
(  669)     ENDIF
(  670)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  671) !$OMP DO
(  672)       DO l=z_min-depth,z_max+1+depth
(  673)         DO j=x_min-depth,x_max+1+depth
(  674)           DO k=1,depth
(  675)             xvel1(j,y_max+1+k,l)=xvel1(j,y_max+1-k,l)
(  676)           ENDDO
(  677)         ENDDO
(  678)       ENDDO
(  679) !$OMP END DO
(  680)     ENDIF
(  681)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  682) !$OMP DO
(  683)       DO l=z_min-depth,z_max+1+depth
(  684)         DO k=y_min-depth,y_max+1+depth
(  685)           DO j=1,depth
(  686)             xvel1(1-j,k,l)=-xvel1(1+j,k,l)
(  687)           ENDDO
(  688)         ENDDO






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 13

(  689)       ENDDO
(  690) !$OMP END DO
(  691)     ENDIF
(  692)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  693) !$OMP DO
(  694)       DO l=z_min-depth,z_max+1+depth
(  695)         DO k=y_min-depth,y_max+1+depth
(  696)           DO j=1,depth
(  697)             xvel1(x_max+1+j,k,l)=-xvel1(x_max+1-j,k,l)
(  698)           ENDDO
(  699)         ENDDO
(  700)       ENDDO
(  701) !$OMP END DO
(  702)     ENDIF
(  703)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  704) !$OMP DO
(  705)       DO k=y_min-depth,y_max+1+depth
(  706)         DO j=x_min-depth,x_max+1+depth
(  707)           DO l=1,depth
(  708)             xvel1(j,k,1-l)=xvel1(j,k,1+l)
(  709)           ENDDO
(  710)         ENDDO
(  711)       ENDDO
(  712) !$OMP END DO
(  713)     ENDIF
(  714)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  715) !$OMP DO
(  716)       DO k=y_min-depth,y_max+1+depth
(  717)         DO j=x_min-depth,x_max+1+depth
(  718)           DO l=1,depth
(  719)             xvel1(j,k,z_max+1+l)=xvel1(j,k,z_max+1-l)
(  720)           ENDDO
(  721)         ENDDO
(  722)       ENDDO
(  723) !$OMP END DO
(  724)     ENDIF
(  725)   ENDIF
(  726) 
(  727)   IF(fields(FIELD_YVEL0).EQ.1) THEN
(  728)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  729) !$OMP DO
(  730)       DO l=z_min-depth,z_max+1+depth
(  731)         DO j=x_min-depth,x_max+1+depth
(  732)           DO k=1,depth
(  733)             yvel0(j,1-k,l)=-yvel0(j,1+k,l)
(  734)           ENDDO
(  735)         ENDDO
(  736)       ENDDO
(  737) !$OMP END DO
(  738)     ENDIF
(  739)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  740) !$OMP DO
(  741)       DO l=z_min-depth,z_max+1+depth
(  742)         DO j=x_min-depth,x_max+1+depth
(  743)           DO k=1,depth
(  744)             yvel0(j,y_max+1+k,l)=-yvel0(j,y_max+1-k,l)
(  745)           ENDDO
(  746)         ENDDO






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 14

(  747)       ENDDO
(  748) !$OMP END DO
(  749)     ENDIF
(  750)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  751) !$OMP DO
(  752)       DO l=z_min-depth,z_max+1+depth
(  753)         DO k=y_min-depth,y_max+1+depth
(  754)           DO j=1,depth
(  755)             yvel0(1-j,k,l)=yvel0(1+j,k,l)
(  756)           ENDDO
(  757)         ENDDO
(  758)       ENDDO
(  759) !$OMP END DO
(  760)     ENDIF
(  761)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  762) !$OMP DO
(  763)       DO l=z_min-depth,z_max+1+depth
(  764)         DO k=y_min-depth,y_max+1+depth
(  765)           DO j=1,depth
(  766)             yvel0(x_max+1+j,k,l)=yvel0(x_max+1-j,k,l)
(  767)           ENDDO
(  768)         ENDDO
(  769)       ENDDO
(  770) !$OMP END DO
(  771)     ENDIF
(  772)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  773) !$OMP DO
(  774)       DO k=y_min-depth,y_max+1+depth
(  775)         DO j=x_min-depth,x_max+1+depth
(  776)           DO l=1,depth
(  777)             yvel0(j,k,1-l)=yvel0(j,k,1+l)
(  778)           ENDDO
(  779)         ENDDO
(  780)       ENDDO
(  781) !$OMP END DO
(  782)     ENDIF
(  783)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  784) !$OMP DO
(  785)       DO k=y_min-depth,y_max+1+depth
(  786)         DO j=x_min-depth,x_max+1+depth
(  787)           DO l=1,depth
(  788)             yvel0(j,k,z_max+1+l)=yvel0(j,k,z_max+1-l)
(  789)           ENDDO
(  790)         ENDDO
(  791)       ENDDO
(  792) !$OMP END DO
(  793)     ENDIF
(  794)   ENDIF
(  795) 
(  796)   IF(fields(FIELD_YVEL1).EQ.1) THEN
(  797)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  798) !$OMP DO
(  799)       DO l=z_min-depth,z_max+1+depth
(  800)         DO j=x_min-depth,x_max+1+depth
(  801)           DO k=1,depth
(  802)             yvel1(j,1-k,l)=-yvel1(j,1+k,l)
(  803)           ENDDO
(  804)         ENDDO






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 15

(  805)       ENDDO
(  806) !$OMP END DO
(  807)     ENDIF
(  808)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  809) !$OMP DO
(  810)       DO l=z_min-depth,z_max+1+depth
(  811)         DO j=x_min-depth,x_max+1+depth
(  812)           DO k=1,depth
(  813)             yvel1(j,y_max+1+k,l)=-yvel1(j,y_max+1-k,l)
(  814)           ENDDO
(  815)         ENDDO
(  816)       ENDDO
(  817) !$OMP END DO
(  818)     ENDIF
(  819)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  820) !$OMP DO
(  821)       DO l=z_min-depth,z_max+1+depth
(  822)         DO k=y_min-depth,y_max+1+depth
(  823)           DO j=1,depth
(  824)             yvel1(1-j,k,l)=yvel1(1+j,k,l)
(  825)           ENDDO
(  826)         ENDDO
(  827)       ENDDO
(  828) !$OMP END DO
(  829)     ENDIF
(  830)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  831) !$OMP DO
(  832)       DO l=z_min-depth,z_max+1+depth
(  833)         DO k=y_min-depth,y_max+1+depth
(  834)           DO j=1,depth
(  835)             yvel1(x_max+1+j,k,l)=yvel1(x_max+1-j,k,l)
(  836)           ENDDO
(  837)         ENDDO
(  838)       ENDDO
(  839) !$OMP END DO
(  840)     ENDIF
(  841)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  842) !$OMP DO
(  843)       DO k=y_min-depth,y_max+1+depth
(  844)         DO j=x_min-depth,x_max+1+depth
(  845)           DO l=1,depth
(  846)             yvel1(j,k,1-l)=yvel1(j,k,1+l)
(  847)           ENDDO
(  848)         ENDDO
(  849)       ENDDO
(  850) !$OMP END DO
(  851)     ENDIF
(  852)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  853) !$OMP DO
(  854)       DO k=y_min-depth,y_max+1+depth
(  855)         DO j=x_min-depth,x_max+1+depth
(  856)           DO l=1,depth
(  857)             yvel1(j,k,z_max+1+l)=yvel1(j,k,z_max+1-l)
(  858)           ENDDO
(  859)         ENDDO
(  860)       ENDDO
(  861) !$OMP END DO
(  862)     ENDIF






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 16

(  863)   ENDIF
(  864) 
(  865)   IF(fields(FIELD_ZVEL0).EQ.1) THEN
(  866)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  867) !$OMP DO
(  868)       DO l=z_min-depth,z_max+1+depth
(  869)         DO j=x_min-depth,x_max+1+depth
(  870)           DO k=1,depth
(  871)             zvel0(j,1-k,l)=zvel0(j,1+k,l)
(  872)           ENDDO
(  873)         ENDDO
(  874)       ENDDO
(  875) !$OMP END DO
(  876)     ENDIF
(  877)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  878) !$OMP DO
(  879)       DO l=z_min-depth,z_max+1+depth
(  880)         DO j=x_min-depth,x_max+1+depth
(  881)           DO k=1,depth
(  882)             zvel0(j,y_max+1+k,l)=zvel0(j,y_max+1-k,l)
(  883)           ENDDO
(  884)         ENDDO
(  885)       ENDDO
(  886) !$OMP END DO
(  887)     ENDIF
(  888)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  889) !$OMP DO
(  890)       DO l=z_min-depth,z_max+1+depth
(  891)         DO k=y_min-depth,y_max+1+depth
(  892)           DO j=1,depth
(  893)             zvel0(1-j,k,l)=zvel0(1+j,k,l)
(  894)           ENDDO
(  895)         ENDDO
(  896)       ENDDO
(  897) !$OMP END DO
(  898)     ENDIF
(  899)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  900) !$OMP DO
(  901)       DO l=z_min-depth,z_max+1+depth
(  902)         DO k=y_min-depth,y_max+1+depth
(  903)           DO j=1,depth
(  904)             zvel0(x_max+1+j,k,l)=zvel0(x_max+1-j,k,l)
(  905)           ENDDO
(  906)         ENDDO
(  907)       ENDDO
(  908) !$OMP END DO
(  909)     ENDIF
(  910)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  911) !$OMP DO
(  912)       DO k=y_min-depth,y_max+1+depth
(  913)         DO j=x_min-depth,x_max+1+depth
(  914)           DO l=1,depth
(  915)             zvel0(j,k,1-l)=-zvel0(j,k,1+l)
(  916)           ENDDO
(  917)         ENDDO
(  918)       ENDDO
(  919) !$OMP END DO
(  920)     ENDIF






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 17

(  921)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  922) !$OMP DO
(  923)       DO k=y_min-depth,y_max+1+depth
(  924)         DO j=x_min-depth,x_max+1+depth
(  925)           DO l=1,depth
(  926)             zvel0(j,k,z_max+1+l)=-zvel0(j,k,z_max+1-l)
(  927)           ENDDO
(  928)         ENDDO
(  929)       ENDDO
(  930) !$OMP END DO
(  931)     ENDIF
(  932)   ENDIF
(  933) 
(  934)   IF(fields(FIELD_ZVEL1).EQ.1) THEN
(  935)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
(  936) !$OMP DO
(  937)       DO l=z_min-depth,z_max+1+depth
(  938)         DO j=x_min-depth,x_max+1+depth
(  939)           DO k=1,depth
(  940)             zvel1(j,1-k,l)=zvel1(j,1+k,l)
(  941)           ENDDO
(  942)         ENDDO
(  943)       ENDDO
(  944) !$OMP END DO
(  945)     ENDIF
(  946)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
(  947) !$OMP DO
(  948)       DO l=z_min-depth,z_max+1+depth
(  949)         DO j=x_min-depth,x_max+1+depth
(  950)           DO k=1,depth
(  951)             zvel1(j,y_max+1+k,l)=zvel1(j,y_max+1-k,l)
(  952)           ENDDO
(  953)         ENDDO
(  954)       ENDDO
(  955) !$OMP END DO
(  956)     ENDIF
(  957)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
(  958) !$OMP DO
(  959)       DO l=z_min-depth,z_max+1+depth
(  960)         DO k=y_min-depth,y_max+1+depth
(  961)           DO j=1,depth
(  962)             zvel1(1-j,k,l)=zvel1(1+j,k,l)
(  963)           ENDDO
(  964)         ENDDO
(  965)       ENDDO
(  966) !$OMP END DO
(  967)     ENDIF
(  968)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
(  969) !$OMP DO
(  970)       DO l=z_min-depth,z_max+1+depth
(  971)         DO k=y_min-depth,y_max+1+depth
(  972)           DO j=1,depth
(  973)             zvel1(x_max+1+j,k,l)=zvel1(x_max+1-j,k,l)
(  974)           ENDDO
(  975)         ENDDO
(  976)       ENDDO
(  977) !$OMP END DO
(  978)     ENDIF






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 18

(  979)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
(  980) !$OMP DO
(  981)       DO k=y_min-depth,y_max+1+depth
(  982)         DO j=x_min-depth,x_max+1+depth
(  983)           DO l=1,depth
(  984)             zvel1(j,k,1-l)=-zvel1(j,k,1+l)
(  985)           ENDDO
(  986)         ENDDO
(  987)       ENDDO
(  988) !$OMP END DO
(  989)     ENDIF
(  990)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
(  991) !$OMP DO
(  992)       DO k=y_min-depth,y_max+1+depth
(  993)         DO j=x_min-depth,x_max+1+depth
(  994)           DO l=1,depth
(  995)             zvel1(j,k,z_max+1+l)=-zvel1(j,k,z_max+1-l)
(  996)           ENDDO
(  997)         ENDDO
(  998)       ENDDO
(  999) !$OMP END DO
( 1000)     ENDIF
( 1001)   ENDIF
( 1002) 
( 1003)   IF(fields(FIELD_VOL_FLUX_X).EQ.1) THEN
( 1004)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
( 1005) !$OMP DO
( 1006)       DO l=z_min-depth,z_max+depth
( 1007)         DO j=x_min-depth,x_max+1+depth
( 1008)           DO k=1,depth
( 1009)             vol_flux_x(j,1-k,l)=vol_flux_x(j,1+k,l)
( 1010)           ENDDO
( 1011)         ENDDO
( 1012)       ENDDO
( 1013) !$OMP END DO
( 1014)     ENDIF
( 1015)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
( 1016) !$OMP DO
( 1017)       DO l=z_min-depth,z_max+depth
( 1018)         DO j=x_min-depth,x_max+1+depth
( 1019)           DO k=1,depth
( 1020)             vol_flux_x(j,y_max+k,l)=vol_flux_x(j,y_max-k,l)
( 1021)           ENDDO
( 1022)         ENDDO
( 1023)       ENDDO
( 1024) !$OMP END DO
( 1025)     ENDIF
( 1026)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
( 1027) !$OMP DO
( 1028)       DO l=z_min-depth,z_max+depth
( 1029)         DO k=y_min-depth,y_max+depth
( 1030)           DO j=1,depth
( 1031)             vol_flux_x(1-j,k,l)=-vol_flux_x(1+j,k,l)
( 1032)           ENDDO
( 1033)         ENDDO
( 1034)       ENDDO
( 1035) !$OMP END DO
( 1036)     ENDIF






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 19

( 1037)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
( 1038) !$OMP DO
( 1039)       DO l=z_min-depth,z_max+depth
( 1040)         DO k=y_min-depth,y_max+depth
( 1041)           DO j=1,depth
( 1042)             vol_flux_x(x_max+j+1,k,l)=-vol_flux_x(x_max+1-j,k,l)
( 1043)           ENDDO
( 1044)         ENDDO
( 1045)       ENDDO
( 1046) !$OMP END DO
( 1047)     ENDIF
( 1048)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
( 1049) !$OMP DO
( 1050)       DO k=y_min-depth,y_max+depth
( 1051)         DO j=x_min-depth,x_max+depth
( 1052)           DO l=1,depth
( 1053)             vol_flux_x(j,k,1-l)=vol_flux_x(j,k,1+l)
( 1054)           ENDDO
( 1055)         ENDDO
( 1056)       ENDDO
( 1057) !$OMP END DO
( 1058)     ENDIF
( 1059)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
( 1060) !$OMP DO
( 1061)       DO k=y_min-depth,y_max+depth
( 1062)         DO j=x_min-depth,x_max+depth
( 1063)           DO l=1,depth
( 1064)             vol_flux_x(j,k,z_max+l)=vol_flux_x(j,k,z_max-l)
( 1065)           ENDDO
( 1066)         ENDDO
( 1067)       ENDDO
( 1068) !$OMP END DO
( 1069)     ENDIF
( 1070)   ENDIF
( 1071) 
( 1072)   IF(fields(FIELD_MASS_FLUX_X).EQ.1) THEN
( 1073)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
( 1074) !$OMP DO
( 1075)       DO l=z_min-depth,z_max+depth
( 1076)         DO j=x_min-depth,x_max+1+depth
( 1077)           DO k=1,depth
( 1078)             mass_flux_x(j,1-k,l)=mass_flux_x(j,1+k,l)
( 1079)           ENDDO
( 1080)         ENDDO
( 1081)       ENDDO
( 1082) !$OMP END DO
( 1083)     ENDIF
( 1084)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
( 1085) !$OMP DO
( 1086)       DO l=z_min-depth,z_max+depth
( 1087)         DO j=x_min-depth,x_max+1+depth
( 1088)           DO k=1,depth
( 1089)             mass_flux_x(j,y_max+k,l)=mass_flux_x(j,y_max-k,l)
( 1090)           ENDDO
( 1091)         ENDDO
( 1092)       ENDDO
( 1093) !$OMP END DO
( 1094)     ENDIF






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 20

( 1095)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
( 1096) !$OMP DO
( 1097)       DO l=z_min-depth,z_max+depth
( 1098)         DO k=y_min-depth,y_max+depth
( 1099)           DO j=1,depth
( 1100)             mass_flux_x(1-j,k,l)=-mass_flux_x(1+j,k,l)
( 1101)           ENDDO
( 1102)         ENDDO
( 1103)       ENDDO
( 1104) !$OMP END DO
( 1105)     ENDIF
( 1106)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
( 1107) !$OMP DO
( 1108)       DO l=z_min-depth,z_max+depth
( 1109)         DO k=y_min-depth,y_max+depth
( 1110)           DO j=1,depth
( 1111)             mass_flux_x(x_max+j+1,k,l)=-mass_flux_x(x_max+1-j,k,l)
( 1112)           ENDDO
( 1113)         ENDDO
( 1114)       ENDDO
( 1115) !$OMP END DO
( 1116)     ENDIF
( 1117)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
( 1118) !$OMP DO
( 1119)       DO k=y_min-depth,y_max+depth
( 1120)         DO j=x_min-depth,x_max+depth
( 1121)           DO l=1,depth
( 1122)             mass_flux_x(j,k,1-l)=mass_flux_x(j,k,1+l)
( 1123)           ENDDO
( 1124)         ENDDO
( 1125)       ENDDO
( 1126) !$OMP END DO
( 1127)     ENDIF
( 1128)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
( 1129) !$OMP DO
( 1130)       DO k=y_min-depth,y_max+depth
( 1131)         DO j=x_min-depth,x_max+depth
( 1132)           DO l=1,depth
( 1133)             mass_flux_x(j,k,z_max+l)=mass_flux_x(j,k,z_max-l)
( 1134)           ENDDO
( 1135)         ENDDO
( 1136)       ENDDO
( 1137) !$OMP END DO
( 1138)     ENDIF
( 1139)   ENDIF
( 1140) 
( 1141)   IF(fields(FIELD_VOL_FLUX_Y).EQ.1) THEN
( 1142)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
( 1143) !$OMP DO
( 1144)       DO l=z_min-depth,z_max+depth
( 1145)         DO j=x_min-depth,x_max+depth
( 1146)           DO k=1,depth
( 1147)             vol_flux_y(j,1-k,l)=-vol_flux_y(j,1+k,l)
( 1148)           ENDDO
( 1149)         ENDDO
( 1150)       ENDDO
( 1151) !$OMP END DO
( 1152)     ENDIF






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 21

( 1153)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
( 1154) !$OMP DO
( 1155)       DO l=z_min-depth,z_max+depth
( 1156)         DO j=x_min-depth,x_max+depth
( 1157)           DO k=1,depth
( 1158)             vol_flux_y(j,y_max+k+1,l)=-vol_flux_y(j,y_max+1-k,l)
( 1159)           ENDDO
( 1160)         ENDDO
( 1161)       ENDDO
( 1162) !$OMP END DO
( 1163)     ENDIF
( 1164)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
( 1165) !$OMP DO
( 1166)       DO l=z_min-depth,z_max+depth
( 1167)         DO k=y_min-depth,y_max+1+depth
( 1168)           DO j=1,depth
( 1169)             vol_flux_y(1-j,k,l)=vol_flux_y(1+j,k,l)
( 1170)           ENDDO
( 1171)         ENDDO
( 1172)       ENDDO
( 1173) !$OMP END DO
( 1174)     ENDIF
( 1175)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
( 1176) !$OMP DO
( 1177)       DO l=z_min-depth,z_max+depth
( 1178)         DO k=y_min-depth,y_max+1+depth
( 1179)           DO j=1,depth
( 1180)             vol_flux_y(x_max+j,k,l)=vol_flux_y(x_max-j,k,l)
( 1181)           ENDDO
( 1182)         ENDDO
( 1183)       ENDDO
( 1184) !$OMP END DO
( 1185)     ENDIF
( 1186)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
( 1187) !$OMP DO
( 1188)       DO k=y_min-depth,y_max+depth
( 1189)         DO j=x_min-depth,x_max+depth
( 1190)           DO l=1,depth
( 1191)             vol_flux_y(j,k,1-l)=vol_flux_y(j,k,1+l)
( 1192)           ENDDO
( 1193)         ENDDO
( 1194)       ENDDO
( 1195) !$OMP END DO
( 1196)     ENDIF
( 1197)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
( 1198) !$OMP DO
( 1199)       DO k=y_min-depth,y_max+depth
( 1200)         DO j=x_min-depth,x_max+depth
( 1201)           DO l=1,depth
( 1202)             vol_flux_y(j,k,z_max+l)=vol_flux_y(j,k,z_max-l)
( 1203)           ENDDO
( 1204)         ENDDO
( 1205)       ENDDO
( 1206) !$OMP END DO
( 1207)     ENDIF
( 1208)   ENDIF
( 1209) 
( 1210)   IF(fields(FIELD_MASS_FLUX_Y).EQ.1) THEN






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 22

( 1211)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
( 1212) !$OMP DO
( 1213)       DO l=z_min-depth,z_max+depth
( 1214)         DO j=x_min-depth,x_max+depth
( 1215)           DO k=1,depth
( 1216)             mass_flux_y(j,1-k,l)=-mass_flux_y(j,1+k,l)
( 1217)           ENDDO
( 1218)         ENDDO
( 1219)       ENDDO
( 1220) !$OMP END DO
( 1221)     ENDIF
( 1222)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
( 1223) !$OMP DO
( 1224)       DO l=z_min-depth,z_max+depth
( 1225)         DO j=x_min-depth,x_max+depth
( 1226)           DO k=1,depth
( 1227)             mass_flux_y(j,y_max+k+1,l)=-mass_flux_y(j,y_max+1-k,l)
( 1228)           ENDDO
( 1229)         ENDDO
( 1230)       ENDDO
( 1231) !$OMP END DO
( 1232)     ENDIF
( 1233)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
( 1234) !$OMP DO
( 1235)       DO l=z_min-depth,z_max+depth
( 1236)         DO k=y_min-depth,y_max+1+depth
( 1237)           DO j=1,depth
( 1238)             mass_flux_y(1-j,k,l)=mass_flux_y(1+j,k,l)
( 1239)           ENDDO
( 1240)         ENDDO
( 1241)       ENDDO
( 1242) !$OMP END DO
( 1243)     ENDIF
( 1244)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
( 1245) !$OMP DO
( 1246)       DO l=z_min-depth,z_max+depth
( 1247)         DO k=y_min-depth,y_max+1+depth
( 1248)           DO j=1,depth
( 1249)             mass_flux_y(x_max+j,k,l)=mass_flux_y(x_max-j,k,l)
( 1250)           ENDDO
( 1251)         ENDDO
( 1252)       ENDDO
( 1253) !$OMP END DO
( 1254)     ENDIF
( 1255)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
( 1256) !$OMP DO
( 1257)       DO k=y_min-depth,y_max+depth
( 1258)         DO j=x_min-depth,x_max+depth
( 1259)           DO l=1,depth
( 1260)             mass_flux_y(j,k,1-l)=mass_flux_y(j,k,1+l)
( 1261)           ENDDO
( 1262)         ENDDO
( 1263)       ENDDO
( 1264) !$OMP END DO
( 1265)     ENDIF
( 1266)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
( 1267) !$OMP DO
( 1268)       DO k=y_min-depth,y_max+depth






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 23

( 1269)         DO j=x_min-depth,x_max+depth
( 1270)           DO l=1,depth
( 1271)             mass_flux_y(j,k,z_max+l)=mass_flux_y(j,k,z_max-l)
( 1272)           ENDDO
( 1273)         ENDDO
( 1274)       ENDDO
( 1275) !$OMP END DO
( 1276)     ENDIF
( 1277)   ENDIF
( 1278) 
( 1279)   IF(fields(FIELD_VOL_FLUX_Z).EQ.1) THEN
( 1280)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
( 1281) !$OMP DO
( 1282)       DO l=z_min-depth,z_max+depth
( 1283)         DO j=x_min-depth,x_max+depth
( 1284)           DO k=1,depth
( 1285)             vol_flux_z(j,1-k,l)=vol_flux_z(j,1+k,l)
( 1286)           ENDDO
( 1287)         ENDDO
( 1288)       ENDDO
( 1289) !$OMP END DO
( 1290)     ENDIF
( 1291)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
( 1292) !$OMP DO
( 1293)       DO l=z_min-depth,z_max+1+depth
( 1294)         DO j=x_min-depth,x_max+depth
( 1295)           DO k=1,depth
( 1296)             vol_flux_z(j,y_max+k,l)=vol_flux_z(j,y_max-k,l)
( 1297)           ENDDO
( 1298)         ENDDO
( 1299)       ENDDO
( 1300) !$OMP END DO
( 1301)     ENDIF
( 1302)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
( 1303) !$OMP DO
( 1304)       DO l=z_min-depth,z_max+1+depth
( 1305)         DO k=y_min-depth,y_max+depth
( 1306)           DO j=1,depth
( 1307)             vol_flux_z(1-j,k,l)=vol_flux_z(1+j,k,l)
( 1308)           ENDDO
( 1309)         ENDDO
( 1310)       ENDDO
( 1311) !$OMP END DO
( 1312)     ENDIF
( 1313)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
( 1314) !$OMP DO
( 1315)       DO l=z_min-depth,z_max+1+depth
( 1316)         DO k=y_min-depth,y_max+depth
( 1317)           DO j=1,depth
( 1318)             vol_flux_z(x_max+j,k,l)=vol_flux_z(x_max-j,k,l)
( 1319)           ENDDO
( 1320)         ENDDO
( 1321)       ENDDO
( 1322) !$OMP END DO
( 1323)     ENDIF
( 1324)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
( 1325) !$OMP DO
( 1326)       DO k=y_min-depth,y_max+depth






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 24

( 1327)         DO j=x_min-depth,x_max+depth
( 1328)           DO l=1,depth
( 1329)             vol_flux_z(j,k,1-l)=-vol_flux_z(j,k,1+l)
( 1330)           ENDDO
( 1331)         ENDDO
( 1332)       ENDDO
( 1333) !$OMP END DO
( 1334)     ENDIF
( 1335)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
( 1336) !$OMP DO
( 1337)       DO k=y_min-depth,y_max+depth
( 1338)         DO j=x_min-depth,x_max+depth
( 1339)           DO l=1,depth
( 1340)             vol_flux_z(j,k,z_max+l+1)=-vol_flux_z(j,k,z_max+1-l)
( 1341)           ENDDO
( 1342)         ENDDO
( 1343)       ENDDO
( 1344) !$OMP END DO
( 1345)     ENDIF
( 1346)   ENDIF
( 1347)   IF(fields(FIELD_MASS_FLUX_Z).EQ.1) THEN
( 1348)     IF(chunk_neighbours(CHUNK_BOTTOM).EQ.EXTERNAL_FACE) THEN
( 1349) !$OMP DO
( 1350)       DO l=z_min-depth,z_max+1+depth
( 1351)         DO j=x_min-depth,x_max+depth
( 1352)           DO k=1,depth
( 1353)             mass_flux_z(j,1-k,l)=mass_flux_z(j,1+k,l)
( 1354)           ENDDO
( 1355)         ENDDO
( 1356)       ENDDO
( 1357) !$OMP END DO
( 1358)     ENDIF
( 1359)     IF(chunk_neighbours(CHUNK_TOP).EQ.EXTERNAL_FACE) THEN
( 1360) !$OMP DO
( 1361)       DO l=z_min-depth,z_max+1+depth
( 1362)         DO j=x_min-depth,x_max+depth
( 1363)           DO k=1,depth
( 1364)             mass_flux_z(j,y_max+k,l)=mass_flux_z(j,y_max-k,l)
( 1365)           ENDDO
( 1366)         ENDDO
( 1367)       ENDDO
( 1368) !$OMP END DO
( 1369)     ENDIF
( 1370)     IF(chunk_neighbours(CHUNK_LEFT).EQ.EXTERNAL_FACE) THEN
( 1371) !$OMP DO
( 1372)       DO l=z_min-depth,z_max+1+depth
( 1373)         DO k=y_min-depth,y_max+depth
( 1374)           DO j=1,depth
( 1375)             mass_flux_z(1-j,k,l)=mass_flux_z(1+j,k,l)
( 1376)           ENDDO
( 1377)         ENDDO
( 1378)       ENDDO
( 1379) !$OMP END DO
( 1380)     ENDIF
( 1381)     IF(chunk_neighbours(CHUNK_RIGHT).EQ.EXTERNAL_FACE) THEN
( 1382) !$OMP DO
( 1383)       DO l=z_min-depth,z_max+1+depth
( 1384)         DO k=y_min-depth,y_max+depth






PGF90 (Version     13.5)          07/18/2014  14:45:18      page 25

( 1385)           DO j=1,depth
( 1386)             mass_flux_z(x_max+j,k,l)=mass_flux_z(x_max-j,k,l)
( 1387)           ENDDO
( 1388)         ENDDO
( 1389)       ENDDO
( 1390) !$OMP END DO
( 1391)     ENDIF
( 1392)     IF(chunk_neighbours(CHUNK_BACK).EQ.EXTERNAL_FACE) THEN
( 1393) !$OMP DO
( 1394)       DO k=y_min-depth,y_max+depth
( 1395)         DO j=x_min-depth,x_max+depth
( 1396)           DO l=1,depth
( 1397)             mass_flux_z(j,k,1-l)=-mass_flux_z(j,k,1+l)
( 1398)           ENDDO
( 1399)         ENDDO
( 1400)       ENDDO
( 1401) !$OMP END DO
( 1402)     ENDIF
( 1403)     IF(chunk_neighbours(CHUNK_FRONT).EQ.EXTERNAL_FACE) THEN
( 1404) !$OMP DO
( 1405)       DO k=y_min-depth,y_max+depth
( 1406)         DO j=x_min-depth,x_max+depth
( 1407)           DO l=1,depth
( 1408)             mass_flux_z(j,k,z_max+1+l)=-mass_flux_z(j,k,z_max+1-l)
( 1409)           ENDDO
( 1410)         ENDDO
( 1411)       ENDDO
( 1412) !$OMP END DO
( 1413)     ENDIF
( 1414)   ENDIF
( 1415) 
( 1416) !$OMP END PARALLEL
( 1417) 
( 1418) END SUBROUTINE update_halo_kernel
( 1419) 
( 1420) END  MODULE update_halo_kernel_module
